* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: #f0f8ff;
    font-family: 'Arial', sans-serif;
    touch-action: manipulation;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    width: 100vw;
}

#game-container {
    position: relative;
    width: 100%;
    max-width: 450px; /* Maximum width for larger screens */
    height: 100vh;
    max-height: 800px; /* Maximum height for larger screens */
    aspect-ratio: 9/16; /* Force portrait aspect ratio */
    background: #fff;
    overflow: hidden;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
}

/* Media query for landscape orientation */
@media (orientation: landscape) {
    #game-container {
        height: 100vh;
        width: auto;
    }
}

/* For smaller screens, use full viewport */
@media (max-width: 450px) {
    #game-container {
        width: 100%;
        height: 100vh;
        max-height: none;
    }
}

#gameCanvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

#ui-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding: 20px;
    pointer-events: none;
    z-index: 10;
    display: flex;
    flex-direction: column;
}

#top-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    padding: 10px 20px;
    pointer-events: auto;
}

#treats-counter {
    background: rgba(255, 255, 255, 0.9);
    padding: 10px 15px;
    border-radius: 20px;
    display: inline-flex;
    align-items: center;
    gap: 8px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    pointer-events: auto;
}

.treat-icon {
    width: 24px;
    height: 24px;
    object-fit: contain;
}

.ui-button {
    background: rgba(255, 255, 255, 0.9);
    border: none;
    padding: 10px 15px;
    border-radius: 20px;
    display: flex;
    align-items: center;
    gap: 8px;
    cursor: pointer;
    font-size: 14px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s;
}

.ui-button:hover {
    transform: scale(1.05);
}

.ui-button:active {
    transform: scale(0.95);
}

.ui-button img {
    width: 24px;
    height: 24px;
}

#fullness-meter {
    position: absolute;
    bottom: 100px; /* Move up to make room for debug controls */
    left: 50%;
    transform: translateX(-50%);
    width: 80%;
    height: 20px;
    background: rgba(255, 255, 255, 0.9);
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

#fullness-progress {
    width: 0%;
    height: 100%;
    background: linear-gradient(90deg, #ff9a9e 0%, #fad0c4 100%);
    transition: width 0.3s ease;
}

.hat-icon {
    width: 24px;
    height: 24px;
}

#hat-inventory {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.95);
    z-index: 20;
    padding: 20px;
    display: flex;
    flex-direction: column;
}

#hat-inventory.hidden {
    display: none;
}

.inventory-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

#close-inventory {
    background: none;
    border: none;
    font-size: 24px;
    cursor: pointer;
    padding: 5px 10px;
}

.rarity-filters {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
}

.rarity-filter {
    padding: 8px 16px;
    border: none;
    border-radius: 20px;
    background: #f0f0f0;
    cursor: pointer;
}

.rarity-filter.active {
    background: #ff9a9e;
    color: white;
}

#hats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    gap: 15px;
    overflow-y: auto;
    padding: 10px;
}

.hat-item {
    aspect-ratio: 1;
    background: #f8f8f8;
    border-radius: 10px;
    display: flex;
    flex-direction: column; /* Arrange image and name vertically */
    align-items: center;
    justify-content: center; /* Center content vertically */
    cursor: pointer;
    transition: transform 0.2s;
    padding: 5px; /* Add some padding inside the item */
    position: relative; /* For positioning the lock icon */
    overflow: hidden; /* Prevent content from spilling out */
}

.hat-item:hover {
    transform: scale(1.05);
}

.hat-item img {
    width: 80%;
    height: 80%;
    object-fit: contain;
    margin-bottom: 5px; /* Space between image and name */
}

.hat-item .hat-item-name {
    font-size: 0.8em; /* Adjust as needed */
    text-align: center;
    color: #333;
    width: 100%; /* Ensure it uses the available width */
    overflow: hidden; /* Hide overflow */
    text-overflow: ellipsis; /* Add ellipsis for long names */
    white-space: nowrap; /* Prevent wrapping to multiple lines, use with ellipsis */
    /* If you prefer wrapping, use:
    white-space: normal;
    word-wrap: break-word;
    */
}

.hat-item.locked {
    filter: grayscale(1);
    opacity: 0.5;
    /* cursor: not-allowed; is handled by inline style in JS if needed or can be reinforced here */
}

.hat-item.locked .hat-item-name {
  color: #888; /* Darker grey for locked item names */
}

.hat-item .lock-icon {
  position: absolute;
  top: 8px;
  right: 8px;
  font-size: 1.2em; /* Adjust size */
  color: rgba(0, 0, 0, 0.6);
  background-color: rgba(255, 255, 255, 0.5); /* Slight background for visibility */
  border-radius: 50%;
  padding: 2px 4px;
  line-height: 1; /* Ensure tight fit for the icon */
  pointer-events: none; /* So it doesn't interfere with hat-item click */
}

/* Animation classes */
@keyframes bounce {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
}

.bounce {
    animation: bounce 0.5s ease;
}

@keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
}

.shake {
    animation: shake 0.5s ease;
}

#debug-controls {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex; /* Added for layout */
    gap: 10px; /* Added for spacing */
    pointer-events: auto; /* Enable clicks on debug controls */
    z-index: 15; /* Ensure it's above fullness meter but below modals */
}

.debug-button {
    background-color: #ffc107;
    color: white;
    border: none;
    padding: 10px 15px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 12px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.debug-button:hover {
    background-color: #e0a800;
}
.debug-button:active {
    transform: scale(0.98);
}

.hat-reveal-overlay {
    position: fixed;
    bottom: 20px; /* Adjust as needed for spacing from the bottom */
    left: 50%;
    transform: translateX(-50%); /* Dynamically combined with scale from JS */
    display: flex; /* This will be controlled by inline style (JS) for show/hide animation */
    justify-content: center;
    align-items: center;
    z-index: 1000; /* Ensure it's on top of other UI elements */
    pointer-events: none; /* Overlay itself doesn't capture clicks, content might if needed */
    /* Transition for opacity and transform will be driven by JS state updates */
}

.hat-reveal-display {
    background: rgba(20, 20, 40, 0.85); /* Dark semi-transparent background */
    padding: 20px 30px;
    border-radius: 15px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5);
    text-align: center;
    color: white;
    display: flex; /* Use flex to arrange image and text nicely */
    flex-direction: column;
    align-items: center;
    gap: 10px; /* Space between image and text */
    max-width: 300px; /* Max width for the reveal box */
}

.hat-reveal-display img {
    max-width: 100px; /* Adjust size as needed */
    max-height: 100px;
    object-fit: contain;
    /* margin-bottom: 10px; Removed in favor of gap */
}

.hat-reveal-display .hat-name {
    font-size: 1.4em; /* Larger font for the hat name */
    font-weight: bold;
    text-shadow: 1px 1px 3px rgba(0,0,0,0.7);
}

/* Rarity colors for hat names (assuming these classes are already defined elsewhere or add them) */
/* .hat-name.common { color: #FFFFFF; } */ /* Default white */
/* .hat-name.uncommon { color: #1eff00; } */ /* Example: Green */
/* .hat-name.rare { color: #0070dd; } */ /* Example: Blue */
/* .hat-name.legendary { color: #a335ee; } */ /* Example: Purple */
/* .hat-name.ultrarare { color: #ff8000; } */ /* Example: Orange for ultraRare if it exists, or similar to legendary */

/* Ensure existing rarity classes in your CSS target .hat-name.<rarity> if they don't already */

.avatar-icon {
    width: 24px;
    height: 24px;
}

#avatar-selector {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.95);
    z-index: 20;
    padding: 20px;
    display: flex;
    flex-direction: column;
}

#avatar-selector.hidden {
    display: none;
}

#avatars-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    gap: 15px;
    overflow-y: auto;
    padding: 10px;
}

.avatar-item {
    aspect-ratio: 1;
    background: #f8f8f8;
    border-radius: 10px;
    display: flex;
    flex-direction: column; /* Stack image and name vertically */
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: transform 0.2s, box-shadow 0.2s; /* Add box-shadow transition */
    padding: 10px; /* Add some padding */
    box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Subtle shadow */
}

.avatar-item:hover {
    transform: scale(1.05);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15); /* Enhanced shadow on hover */
}
.avatar-item.selected {
    border: 3px solid #ff9a9e; /* Highlight selected avatar */
    box-shadow: 0 0 10px #ff9a9e; /* Glow effect for selected */
}

.avatar-item img {
    width: 80%;
    height: 80%;
    object-fit: contain;
    pointer-events: none; /* Make sure clicks go to the avatar-item div */
}

/* Corrected selector */
.avatar-item .avatar-item-name {
    font-size: 14px; /* Original was 14px, current was 0.8em. Let's try 14px */
    font-weight: bold;
    text-align: center;
    padding: 4px 8px; /* Original had 4px 12px, let's adjust for possibly smaller items */
    border-radius: 8px;
    white-space: nowrap;
    color: #666;
    pointer-events: none; /* Make sure clicks go to the avatar-item div */
    width: 100%; /* Ensure it uses available width */
    overflow: hidden;
    text-overflow: ellipsis;
}

/* Added from original CSS for :active state */
.avatar-item:active {
    transform: scale(0.95) !important;
    background: #ffe4e6 !important;
    border-color: #ff9a9e !important;
}

/* Added from original CSS for category-specific name backgrounds */
.avatar-item.cats .avatar-item-name { /* Corrected selector */
    background: linear-gradient(45deg, #ff9a9e, #fad0c4);
    color: white;
}

.avatar-item.animals .avatar-item-name { /* Corrected selector */
    background: linear-gradient(45deg, #84fab0, #8fd3f4);
    color: white;
}

.avatar-item.food .avatar-item-name { /* Corrected selector */
    background: linear-gradient(45deg, #ffc3a0, #ffafbd);
    color: white;
}

#play-button {
    position: absolute;
    bottom: 30px; /* Positioned at the bottom center */
    left: 50%;
    transform: translateX(-50%);
    background: #ff69b4; /* Hot pink */
    color: white;
    padding: 15px 30px;
    border-radius: 30px; /* More rounded */
    font-size: 18px;
    font-weight: bold;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    z-index: 15; /* Ensure it's above other elements like fullness bar */
    pointer-events: auto; /* Make sure it's clickable */
}

#play-button:hover {
    background: #ff85c1; /* Lighter pink on hover */
    transform: translateX(-50%) scale(1.05); /* Slight scale up */
}

#play-button:active {
    background: #ff50a3; /* Darker pink on active */
    transform: translateX(-50%) scale(0.98); /* Slight scale down */
}

.play-icon {
    width: 24px;
    height: 24px;
    margin-right: 8px; /* Space between icon and text */
} 